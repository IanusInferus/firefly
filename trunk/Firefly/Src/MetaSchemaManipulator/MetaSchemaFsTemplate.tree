$Comment
    ==========================================================================

      File:        MetaSchemaFsTemplate.tree
      Location:    Firefly.MetaSchemaManipulator <Tree>
      Description: 元类型结构F#模板数据
      Version:     2011.08.01.
      Copyright(C) F.R.C.

    ==========================================================================

MetaSchemaTemplate
    Keywords
        $List String
            abstract
            and
            as
            assert
            base
            begin
            class
            default
            delegate
            do
            done
            downcast
            downto
            elif
            else
            end
            exception
            extern
            false
            finally
            for
            fun
            function
            global
            if
            in
            inherit
            inline
            interface
            internal
            lazy
            let
            match
            member
            module
            mutable
            namespace
            new
            not
            null
            of
            open
            or
            override
            private
            public
            rec
            return
            static
            struct
            then
            to
            true
            try
            type
            upcast
            use
            val
            void
            when
            while
            with
            yield
            asr

            land
            lor
            lsl
            lsr
            lxor
            mod
            sig

            atomic
            break
            checked
            component
            const
            constraint
            constructor
            continue
            eager
            event
            external
            fixed
            functor
            include
            method
            mixin
            object
            parallel
            process
            protected
            pure
            sealed
            tailcall
            trait
            virtual
            volatile
    PrimitiveMappings
        PrimitiveMapping
            Name Unit
            PlatformName unit
        PrimitiveMapping
            Name BooleanLiteral
            PlatformName System.Boolean
        PrimitiveMapping
            Name IntegerLiteral
            PlatformName System.Int64
        PrimitiveMapping
            Name StringLiteral
            PlatformName System.String
    Templates
        Template
            Name Main
            //Parameters: ${NamespaceName}, ${Concepts}
            Value
                $String
                    //==========================================================================
                    //
                    //  Notice:      This file is automatically generated.
                    //               Please don't modify this file.
                    //
                    //==========================================================================

                    namespace [[${NamespaceName}]]

                    open System

                    ${Concepts}

                $End
        Template
            Name Primitive
            //Parameters: ${Name}, ${PlatformName}
            Value
                $String
                    type [[${Name}]] = ${PlatformName}
        Template
            Name Alias
            //Parameters: ${Name}, ${Type}
            Value
                $String
                    type [[${Name}]] = [[${Type}]]
        Template
            Name Field
            //Parameters: ${Name}, ${Type}
            Value
                $String
                    [[${Name}]] : [[${Type}]]
        Template
            Name Record
            //Parameters: ${Name}, ${Fields}
            Value
                $String
                    type [[${Name}]] = {
                        ${Fields}
                    }
        Template
            Name Alternative
            //Parameters: ${Name}, ${Type}
            Value
                $String
                    | [[${Name}]] of [[${Type}]]
        Template
            Name TaggedUnion
            //Parameters: ${Name}, ${Alternatives}
            Value
                $String
                    type [[${Name}]] =
                        ${Alternatives}

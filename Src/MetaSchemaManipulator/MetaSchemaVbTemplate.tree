$Comment
    ==========================================================================
    
      File:        MetaSchemaVbTemplate.tree
      Location:    Firefly.MetaSchemaManipulator <Tree>
      Description: 元类型结构VB模板数据
      Version:     2011.03.16.
      Copyright(C) F.R.C.
    
    ==========================================================================

MetaSchemaVbTemplate
    Keywords
        $List String
            AddHandler
            AddressOf
            Alias
            And
            AndAlso
            As
            Boolean
            ByRef
            Byte
            ByVal
            Call
            Case
            Catch
            CBool
            CByte
            CChar
            CDate
            CDec
            CDbl
            Char
            CInt
            Class
            CLng
            CObj
            Const
            Continue
            CSByte
            CShort
            CSng
            CStr
            CType
            CUInt
            CULng
            CUShort
            Date
            Decimal
            Declare
            Default
            Delegate
            Dim
            DirectCast
            Do
            Double
            Each
            Else
            ElseIf
            End
            EndIf
            Enum
            Erase
            Error
            Event
            Exit
            False
            Finally
            For
            Friend
            Function
            Get
            GetType
            GetXMLNamespace
            Global
            GoSub
            GoTo
            Handles
            If
            Implements
            Imports
            In
            Inherits
            Integer
            Interface
            Is
            IsNot
            Let
            Lib
            Like
            Long
            Loop
            Me
            Mod
            Module
            MustInherit
            MustOverride
            MyBase
            MyClass
            Namespace
            Narrowing
            New
            Next
            Not
            Nothing
            NotInheritable
            NotOverridable
            Object
            Of
            On
            Operator
            Option
            Optional
            Or
            OrElse
            Overloads
            Overridable
            Overrides
            ParamArray
            Partial
            Private
            Property
            Protected
            Public
            RaiseEvent
            ReadOnly
            ReDim
            REM
            RemoveHandler
            Resume
            Return
            SByte
            Select
            Set
            Shadows
            Shared
            Short
            Single
            Static
            Step
            Stop
            String
            Structure
            Sub
            SyncLock
            Then
            Throw
            To
            True
            Try
            TryCast
            TypeOf
            Variant
            Wend
            UInteger
            ULong
            UShort
            Using
            When
            While
            Widening
            With
            WithEvents
            WriteOnly
            Xor
    PrimitiveMappings
        PrimitiveMapping
            Name BooleanLiteral
            PlatformName System.Boolean
        PrimitiveMapping
            Name IntegerLiteral
            PlatformName System.Int64
        PrimitiveMapping
            Name StringLiteral
            PlatformName System.String
    Templates
        Template
            Name MainWithNamespace
            //Parameters: ${Header}, ${NamespaceName}, ${Primitives}, ${ComplexConcepts}
            Value
                $String
                    ${Header}
                    ${Primitives}
                    
                    Namespace ${NamespaceName}
                        ${ComplexConcepts}
                    End Namespace
                    
        Template
            Name MainWithoutNamespace
            //Parameters: ${Header}, ${Primitives}, ${ComplexConcepts}
            Value
                $String
                    ${Header}
                    ${Primitives}

                    ${ComplexConcepts}
                    
        Template
            Name Header
            //Parameters:
            Value
                $String
                    '==========================================================================
                    '
                    '  Notice:      This file is automatically generated.
                    '               Please don't modify this file.
                    '
                    '==========================================================================

                    Imports System
                    Imports System.Diagnostics
                    Imports Firefly
                    Imports Firefly.Mapping
                    Imports Firefly.Mapping.MetaSchema
        Template
            Name Primitive
            //Parameters: ${Name}, ${PlatformName}
            Value
                $String
                    Imports ${Name} = ${PlatformName}
        Template
            Name Alias
            //Parameters: ${Name}, ${Type}
            Value
                $String
                    <[Alias](), DebuggerDisplay("{ToString()}")>
                    Public Class ${Name}
                        Public Value As ${Type}
                        
                        Public Shared Widening Operator CType(ByVal o As ${Type}) As ${Name}
                            Return New ${Name} With {.Value = o}
                        End Operator
                        Public Shared Widening Operator CType(ByVal c As ${Name}) As ${Type}
                            Return c.Value
                        End Operator

                        Public Overrides Function ToString() As String
                            Return DebuggerDisplayer.ConvertToString(Me)
                        End Function
                    End Class
        Template
            Name TupleElement
            //Parameters: ${NameIndex}, ${Type}
            Value
                $String
                    Public Item${NameIndex} As ${Type}
        Template
            Name Tuple
            //Parameters: ${Name}, ${TupleElements}
            Value
                $String
                    <Tuple(), DebuggerDisplay("{ToString()}")>
                    Public Class ${Name}
                        ${TupleElements}
                        
                        Public Overrides Function ToString() As String
                            Return DebuggerDisplayer.ConvertToString(Me)
                        End Function
                    End Class
        Template
            Name Field
            //Parameters: ${Name}, ${Type}
            Value
                $String
                    Public ${Name} As ${Type}
        Template
            Name Record
            //Parameters: ${Name}, ${Fields}
            Value
                $String
                    <Record(), DebuggerDisplay("{ToString()}")>
                    Public Class ${Name}
                        ${Fields}
                        
                        Public Overrides Function ToString() As String
                            Return DebuggerDisplayer.ConvertToString(Me)
                        End Function
                    End Class
        Template
            Name Alternative
            //Parameters: ${Name}, ${Type}
            Value
                $String
                    Public ${Name} As ${Type}
        Template
            Name TaggedUnion
            //Parameters: ${Name}, ${AlternativeNames}, ${Alternatives}
            Value
                $String
                    Public Enum ${Name}Tag
                        ${AlternativeNames}
                    End Enum
                    <TaggedUnion(), DebuggerDisplay("{ToString()}")>
                    Public Class ${Name}
                        <Tag()> Public _Tag As ${Name}Tag
                        ${Alternatives}
                        
                        Public Overrides Function ToString() As String
                            Return DebuggerDisplayer.ConvertToString(Me)
                        End Function
                    End Class
